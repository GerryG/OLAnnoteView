<library>
  <class name="scrollview" defaultplacement="content" clip="true" extends="view">
    <!-- This view is used to show the application scrollbars. As soon as this
         view is bigger than the surrounding view the scrollbars will show. -->
    <view name="content" x="0" pixellock="true">
      <handler name="oninit">
Debug.debug("Init1")
        parent.vscroll.onheight.sendEvent();
        parent.hscroll.onwidth.sendEvent();
      </handler>
    </view>

    <!-- APP SCROLLBARS -->
    <vscrollbar name="vscroll" id="cvscroll" x="${parent.width-this.width}"
            height="${this.scrollheight}" scrolltarget="${parent.content}"
            visible="${parent.content.height-15>=parent.height}">
      <attribute name="scrollheight" value="0"/>
      <handler name="onheight" reference="parent">
        if (parent.hscroll.visible == true){ var h = parent.height-15 }
        else { var h = parent.height+1 }
        this.setAttribute('scrollheight', h);
Debug.debug("OnH: %s", h)
      </handler>
    </vscrollbar>
    <hscrollbar name="hscroll" id="chscroll" options="ignorelayout"
              y="${parent.height-this.height}" width="${this.scrollwidth}"
              scrolltarget="${parent.content}" visible="true">
      <attribute name="scrollwidth" value="0"/>
      <handler name="onwidth" reference="parent">
        if (parent.vscroll.visible == true) { var w = parent.width-15; }
        else { var w = parent.width+1 }
        this.setAttribute('scrollwidth', w);
Debug.debug("OnW: %s", w)
      </handler>
      <!-- <handler name="oninit">
        parent.onwidth.sendEvent();
      </handler> -->
    </hscrollbar>

    <!-- BOX IN BOTTOM RIGHT CORNER -->
    <view align="right" valign="bottom" bgcolor="$once{canvas.bgcolor}"
          clickable="false" width="15" height="15"
          visible="${parent.hscroll.visible &amp;&amp; parent.vscroll.visible}">
      <handler name="onmouseover"> lz.Cursor.showHandCursor(false) </handler>
      <handler name="onmouseout"> lz.Cursor.showHandCursor(true) </handler>
    </view>

  </class><!-- clipping view -->
</library>
