<!--=======================================================================-->
<!--                                                                       -->
<!-- cardtest.lzx                                                          -->
<!--                                                                       -->
<!-- Laszlo Application Language (LZX) Example                             -->
<!--   Basic work with Wagn 'card' model                                   -->
<!--                                                                       -->
<!--=======================================================================-->

<canvas title="OpenLaszlo and AIR" height="400" width="400" debug="false" bgcolor="#e5e5e5" proxied="false">

    <!-- APPLICATION WITH SCROLLBARS -->
    <!-- Both outer views are used for showing the scrollbars within the application -->
     <view height="${canvas.height}" width="${canvas.width}" clip="true" align="center">


        <!-- This view is used to show the application scrollbars. As soon as this
             view is bigger than the surrounding view the scrollbars will show. -->
        <view id="scrollContent" x="0" width="600" height="2000" align="center"
            pixellock="true">

<!--       Application Here -->

  <view width="100%" height="100%">
   <simplelayout axis="y" spacing="10"/>
    <text>foo</text>
    <text>bar</text>
    <text>baz</text>
    <text>more text to put out this is a lot of text ...</text>
    <text>waldo</text>
    <text>sssssssj jjjjjjjjjj jjjjjjjjjjj sssssssss s  s s ss sssssss ssssssssss s s ssssssssss s s s sssssssss s ss j</text>
    <text>foo1</text>
    <text>foo2</text>
    <text>foo3</text>
    <text>foo4</text>
    <text>foo</text>
    <text>bar</text>
    <text>baz</text>
    <text>more text to put out this is a lot of text ...</text>
    <text>waldo</text>
    <text>sssssssj jjjjjjjjjj jjjjjjjjjjj sssssssss s  s s ss sssssss ssssssssss s s ssssssssss s s s sssssssss s ss j</text>
    <text>foo1</text>
    <text>foo2</text>
    <text>foo3</text>
    <text>foo4</text>
    <text>foo</text>
    <text>bar</text>
    <text>baz</text>
    <text>more text to put out this is a lot of text ...</text>
    <text>waldo</text>
    <text>sssssssj jjjjjjjjjj jjjjjjjjjjj sssssssss s  s s ss sssssss ssssssssss s s ssssssssss s s s sssssssss s ss j</text>
    <text>foo1</text>
    <text>foo2</text>
    <text>foo3</text>
    <text>foo4</text>
    <text>foo</text>
    <text>bar</text>
    <text>baz</text>
    <text>more text to put out this is a lot of text ...</text>
    <text>waldo</text>
    <text>sssssssj jjjjjjjjjj jjjjjjjjjjj sssssssss s  s s ss sssssss ssssssssss s s ssssssssss s s s sssssssss s ss j</text>
    <text>foo1</text>
    <text>foo2</text>
    <text>foo3</text>
    <text>foo4</text>
    <text>foo</text>
    <text>bar</text>
    <text>baz</text>
    <text>more text to put out this is a lot of text ...</text>
    <text>waldo</text>
    <text>sssssssj jjjjjjjjjj jjjjjjjjjjj sssssssss s  s s ss sssssss ssssssssss s s ssssssssss s s s sssssssss s ss j</text>
    <text>foo1</text>
    <text>foo2</text>
    <text>foo3</text>
    <text>foo4</text>
    <text>foo</text>
    <text>bar</text>
    <text>baz</text>
    <text>more text to put out this is a lot of text ...</text>
    <text>waldo</text>
    <text>sssssssj jjjjjjjjjj jjjjjjjjjjj sssssssss s  s s ss sssssss ssssssssss s s ssssssssss s s s sssssssss s ss j</text>
    <text>foo1</text>
    <text>foo2</text>
    <text>foo3</text>
    <text>foo4</text>
  </view>

            </view>

<!-- end of scroll content -->


        <!-- APP SCROLLBARS -->
        <vscrollbar name="vscroll" id="cvscroll" x="${canvas.width-this.width}" height="${this.scrollheight}"
            scrolltarget="${scrollContent}" visible="${scrollContent.height-15>=canvas.height}">
            <attribute name="scrollheight" value="0"/>
            <handler name="onheight" reference="canvas">
                if (parent.hscroll.visible == true){
                    var h = canvas.height-15;
                }else{
                    var h = canvas.height+1;
                }
                this.setAttribute('scrollheight', h);
            </handler>
      <handler name="oninit">
          canvas.onheight.sendEvent();
      </handler>
        </vscrollbar>
        <hscrollbar name="hscroll" id="chscroll" y="${canvas.height-this.height}" width="${this.scrollwidth}"
            scrolltarget="${scrollContent}" visible="${scrollContent.width-20>=canvas.width}"
      options="ignorelayout">
            <attribute name="scrollwidth" value="0"/>
            <handler name="onwidth" reference="canvas">
                if (parent.vscroll.visible == true){
                    var w = canvas.width-15;
                }else{
                    var w = canvas.width+1;
                }
                this.setAttribute('scrollwidth', w);
            </handler>
      <handler name="oninit">
          canvas.onwidth.sendEvent();
      </handler>
        </hscrollbar>


        <!-- BOX IN BOTTOM RIGHT CORNER -->
    <view align="right" valign="bottom" bgcolor="$once{canvas.bgcolor}" clickable="false" width="15" height="15"
            visible="${parent.hscroll.visible &amp;&amp; parent.vscroll.visible}">
            <handler name="onmouseover">
                lz.Cursor.showHandCursor(false);
            </handler>
            <handler name="onmouseout">
                lz.Cursor.showHandCursor(true);
            </handler>
        </view>


    </view><!-- clipping view -->

</canvas>
