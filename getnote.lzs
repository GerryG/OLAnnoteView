
function find_el(nodes, parent, newnode=null, element='card', deep=0) {
  for (var idx=0; idx<nodes.length; idx++) {
    var subNode = nodes[idx]
    var t = subNode.nodeType
    var nodeName = subNode.nodeName
    var name = ''
    //Debug.debug("Iter[%s,%s] t[%s] %w", idx, nodeName, t, subNode)
    if (t == lz.DataElement.ELEMENT_NODE) {
      var elemName = subNode.getAttr('name')

      var children = subNode.childNodes
      if (subNode.hasAttr('key')) {
        // base card, create the node with the CardName
        var key = elemName
        if (newnode) { Debug.error("Second cardname found: %w", newnode) }
        newnode = new lz.cardview(parent, {cardname: key})
        //Debug.debug("New card Name[%s] %w", key, newnode)
      } else if (nodeName == element) {
        // Top level card, create the node and put in the name
        switch(elemName) {
        case "icon" : name='icon'; break
        case "description" : name='summary'; break
        case "statement" : name='note'; break
        case "resource" : name='rsrc'; break
        case "list" : name='list'; break
        }
        //Debug.debug("Found search element:%s[%s,%s] %w", t, elemName, name, subNode)
        if (name) {
          if (children) {
            var nocont=false
            for (var x=0; x<children.length; x++) {
              var child = children[x]
              if (child.nodeType == lz.DataElement.ELEMENT_NODE &&
                  child.nodeName == 'no_card')
                { nocont=true; break }
            }
            if (!nocont && !newnode[name]) {
              newnode.setAttribute(name, children)
            }
//Debug.debug("Store field[%s, %s] %s", name, elemName, children)
//else {
//if (nocont){Debug.debug("Missing field[%s, %s] %s", name, elemName, children)}
//else {Debug.debug("Duplicate field[%s, %s]", name, elemName)} }
          }
          continue
        }
      }
      if (children) { find_el(children, parent, newnode, element, deep+1) }
    }
  }
}
